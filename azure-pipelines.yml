trigger:
  branches:
    include:
    - '*'

pool:
  vmImage: 'windows-2019'

variables:
  projects: '**/*.csproj'
  configuration: release

steps:
- task: CmdLine@2
  displayName: 'Install DNT'
  inputs:
    script: 'npm i -g dotnettools'
- task: CmdLine@2
  displayName: 'Patch project versions'
  inputs:
    script: 'dnt bump-versions patch "$(Build.BuildNumber)"'

- task: DotNetCoreCLI@2
  displayName: 'Build solution'
  inputs:
    command: 'build'
    projects: '$(projects)'
    arguments: '--configuration $(configuration)'
    feedsToUse: 'select'
    versioningScheme: 'off'
- task: DotNetCoreCLI@2
  displayName: 'Run tests'
  inputs:
    command: 'test'
    projects: '$(projects)'
    arguments: '--configuration $(configuration)'
    feedsToUse: 'select'
    versioningScheme: 'off'
- task: DotNetCoreCLI@2
  displayName: 'Create packages'
  inputs:
    command: 'pack'
    feedsToUse: 'select'
    packagesToPack: '$(projects)'
    arguments: '--configuration $(configuration)'
    versioningScheme: 'off'
- task: PublishBuildArtifacts@1
  displayName: 'Publish artifacts'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'

- task: DotNetCoreCLI@2
  displayName: 'Push packages to CI feed'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  inputs:
    command: 'push'
    feedsToUse: 'select'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/*.nupkg'
    nuGetFeedType: 'internal'
    publishVstsFeed: 'Namotion.Reflection-CI'
    versioningScheme: 'off'
